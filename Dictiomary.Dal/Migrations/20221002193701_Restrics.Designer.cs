// <auto-generated />
using Dictionary.Dal.Access;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Dictiomary.Dal.Migrations
{
    [DbContext(typeof(DictionaryDbContext))]
    [Migration("20221002193701_Restrics")]
    partial class Restrics
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Dictionary.Dal.Models.EnglishWord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Word")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Englishes");
                });

            modelBuilder.Entity("Dictionary.Dal.Models.UkranianWord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Word")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Ukranians");
                });

            modelBuilder.Entity("Dictionary.Dal.Models.Word", b =>
                {
                    b.Property<int>("UkrId")
                        .HasColumnType("int");

                    b.Property<int>("EngId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("UkrId", "EngId");

                    b.HasIndex("EngId");

                    b.ToTable("Words");
                });

            modelBuilder.Entity("Dictionary.Dal.Models.Word", b =>
                {
                    b.HasOne("Dictionary.Dal.Models.EnglishWord", "EnglishWord")
                        .WithMany("UkranianWords")
                        .HasForeignKey("EngId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dictionary.Dal.Models.UkranianWord", "UkranianWord")
                        .WithMany("EnglishWords")
                        .HasForeignKey("UkrId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EnglishWord");

                    b.Navigation("UkranianWord");
                });

            modelBuilder.Entity("Dictionary.Dal.Models.EnglishWord", b =>
                {
                    b.Navigation("UkranianWords");
                });

            modelBuilder.Entity("Dictionary.Dal.Models.UkranianWord", b =>
                {
                    b.Navigation("EnglishWords");
                });
#pragma warning restore 612, 618
        }
    }
}
